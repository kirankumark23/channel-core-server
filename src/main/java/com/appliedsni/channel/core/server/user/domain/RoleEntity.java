package com.appliedsni.channel.core.server.user.domain;
// Generated 3 Nov, 2018 11:22:10 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * role generated by hbm2java
 */
@Entity
@Table(name = "xrole"

)
public class RoleEntity implements java.io.Serializable {
	@Id
	@Column(name = "xidkey", unique = true, nullable = false)
	@Type(type="pg-uuid")
	private UUID mIdKey;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "xaddedby")
	private UserEntity mUser;
	
	@Column(name = "xcompany", length = 20)
	private String mCompany;
	
	@Column(name = "xname", length = 200)
	private String mName;
	
	@Column(name = "xchannel", length = 200)
	private boolean mChannel;
	
	@Column(name = "xversion", nullable = false)
	private int mVersion;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "xadded", length = 29)
	private Date mAdded;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "xlastupdate", length = 29)
	private Date mLastUpdate;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mMenu")
	private Set<RoleMenuEntity> mRoleMenus = new HashSet<RoleMenuEntity>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mRole")
	private Set<UserRoleEntity> mUserRoles = new HashSet<UserRoleEntity>(0);

	public RoleEntity() {
	}

	public RoleEntity(UUID midkey, int mversion) {
		this.mIdKey = midkey;
		this.mVersion = mversion;
	}

	public RoleEntity(UUID midkey, UserEntity muser, String mcompany, String mname, int mversion, Date madded,
			Date mlastupdate, Set<RoleMenuEntity> mrolemenus, Set<UserRoleEntity> muserroles) {
		this.mIdKey = midkey;
		this.mUser = muser;
		this.mCompany = mcompany;
		this.mName = mname;
		this.mVersion = mversion;
		this.mAdded = madded;
		this.mLastUpdate = mlastupdate;
		this.mRoleMenus = mrolemenus;
		this.mUserRoles = muserroles;
	}

	public UUID getIdKey() {
		return mIdKey;
	}

	public void setIdKey(UUID pIdKey) {
		mIdKey = pIdKey;
	}

	public UserEntity getUser() {
		return mUser;
	}

	@JsonIgnore
	public void setUser(UserEntity pUser) {
		mUser = pUser;
	}

	public String getCompany() {
		return mCompany;
	}

	public void setCompany(String pCompany) {
		mCompany = pCompany;
	}

	public String getName() {
		return mName;
	}

	public void setName(String pName) {
		mName = pName;
	}

	public int getVersion() {
		return mVersion;
	}

	public void setVersion(int pVersion) {
		mVersion = pVersion;
	}

	public Date getAdded() {
		return mAdded;
	}

	public void setAdded(Date pAdded) {
		mAdded = pAdded;
	}

	public Date getLastUpdate() {
		return mLastUpdate;
	}

	public void setLastUpdate(Date pLastUpdate) {
		mLastUpdate = pLastUpdate;
	}

	@JsonIgnore
	public Set<RoleMenuEntity> getRoleMenus() {
		return mRoleMenus;
	}

	public void setRoleMenus(Set<RoleMenuEntity> pRoleMenus) {
		mRoleMenus = pRoleMenus;
	}

	@JsonIgnore
	public Set<UserRoleEntity> getUserRoles() {
		return mUserRoles;
	}

	public void setUserRoles(Set<UserRoleEntity> pUserRoles) {
		mUserRoles = pUserRoles;
	}

	public boolean isChannel() {
		return mChannel;
	}

	public void setChannel(boolean pChannel) {
		mChannel = pChannel;
	}

}
