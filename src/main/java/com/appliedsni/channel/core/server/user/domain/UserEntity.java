package com.appliedsni.channel.core.server.user.domain;
// Generated 3 Nov, 2018 11:22:10 PM by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;

import com.appliedsni.channel.core.server.common.annotations.Auditable;

/**
 * user generated by hbm2java
 */
@Entity
@Table(name = "xuser")
@Auditable
public class UserEntity implements java.io.Serializable {
	@Id
	@Column(name = "xidkey", unique = true, nullable = false)
	@Type(type="pg-uuid")
	private UUID mIdkey;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "xaddedby")
	private UserEntity mUser;
	@Column(name = "xemailaddress", nullable = false, length = 200)
	private String mEmailaddress;
	@Column(name = "xfailloginattempts")
	private Integer mFailloginattempts;
	@Column(name = "xfirstname", length = 40)
	private String mFirstname;
	@Column(name = "xlastname", length = 40)
	private String mLastname;
	@Column(name = "xlockuserindicator", nullable = false)
	private boolean mLockuserindicator;
	@Column(name = "xmobilenumber", length = 12)
	private String mMobilenumber;
	@Column(name = "xpasswordhash", length = 40)
	private String mPasswordhash;
	@Column(name = "xversion", nullable = false)
	private int mVersion;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "xadded", length = 29)
	private Date mAdded;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "xlastupdate", length = 29)
	private Date mLastupdate;
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUserByUser")
	private Set<UserRoleEntity> mUserrolesForuser = new HashSet<UserRoleEntity>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUser")
	private Set<MenuEntity> mMenus = new HashSet<MenuEntity>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUserByUser")
	private Set<UserRoleEntity> mUserRolesForAddedBy = new HashSet<UserRoleEntity>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUser")
	private Set<CompanyEntity> mCompanies = new HashSet<CompanyEntity>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUser")
	private Set<BranchEntity> mBranches = new HashSet<BranchEntity>(0);
	/* private Set<Entity> mentities = new HashSet<Entity>(0); */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUser")
	private Set<RoleMenuEntity> mRolemenus = new HashSet<RoleMenuEntity>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUser")
	private Set<RoleEntity> mRoles = new HashSet<RoleEntity>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUser")
	private Set<RoleActionsEntity> mRoleActionses = new HashSet<RoleActionsEntity>(0);
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mUser")
	private Set<UserEntity> mUsers = new HashSet<UserEntity>(0);

	public UserEntity() {
	}

	public UserEntity(UUID midkey, String memailaddress, boolean mlockuserindicator, int mversion) {
		this.mIdkey = midkey;
		this.mEmailaddress = memailaddress;
		this.mLockuserindicator = mlockuserindicator;
		this.mVersion = mversion;
	}

	public UserEntity(UUID midkey, UserEntity muser, String memailaddress, Integer mfailloginattempts,
			String mfirstname, String mlastname, boolean mlockuserindicator, String mmobilenumber, String mpasswordhash,
			int mversion, Date madded, Date mlastupdate, Set<UserRoleEntity> muserrolesForuser, Set<MenuEntity> mmenus,
			Set<UserRoleEntity> muserrolesForaddedby, Set<CompanyEntity> mcompanies,
			Set<BranchEntity> mbranches, /* Set<Entity> mentities, */
			Set<RoleMenuEntity> mrolemenus, Set<RoleEntity> mroles, Set<RoleActionsEntity> mroleactionses, Set<UserEntity> musers) {
		this.mIdkey = midkey;
		this.mUser = muser;
		this.mEmailaddress = memailaddress;
		this.mFailloginattempts = mfailloginattempts;
		this.mFirstname = mfirstname;
		this.mLastname = mlastname;
		this.mLockuserindicator = mlockuserindicator;
		this.mMobilenumber = mmobilenumber;
		this.mPasswordhash = mpasswordhash;
		this.mVersion = mversion;
		this.mAdded = madded;
		this.mLastupdate = mlastupdate;
		this.mUserrolesForuser = muserrolesForuser;
		this.mMenus = mmenus;
		this.mUserRolesForAddedBy = muserrolesForaddedby;
		this.mCompanies = mcompanies;
		this.mBranches = mbranches;
		/* this.mentities = mentities; */
		this.mRolemenus = mrolemenus;
		this.mRoles = mroles;
		this.mRoleActionses = mroleactionses;
		this.mUsers = musers;
	}

	public UUID getIdkey() {
		return mIdkey;
	}

	public void setIdkey(UUID pIdkey) {
		mIdkey = pIdkey;
	}

	public UserEntity getUser() {
		return mUser;
	}

	public void setUser(UserEntity pUser) {
		mUser = pUser;
	}

	public String getEmailaddress() {
		return mEmailaddress;
	}

	public void setEmailaddress(String pEmailaddress) {
		mEmailaddress = pEmailaddress;
	}

	public Integer getFailloginattempts() {
		return mFailloginattempts;
	}

	public void setFailloginattempts(Integer pFailloginattempts) {
		mFailloginattempts = pFailloginattempts;
	}

	public String getFirstname() {
		return mFirstname;
	}

	public void setFirstname(String pFirstname) {
		mFirstname = pFirstname;
	}

	public String getLastname() {
		return mLastname;
	}

	public void setLastname(String pLastname) {
		mLastname = pLastname;
	}

	public boolean isLockuserindicator() {
		return mLockuserindicator;
	}

	public void setLockuserindicator(boolean pLockuserindicator) {
		mLockuserindicator = pLockuserindicator;
	}

	public String getMobilenumber() {
		return mMobilenumber;
	}

	public void setMobilenumber(String pMobilenumber) {
		mMobilenumber = pMobilenumber;
	}

	public String getPasswordhash() {
		return mPasswordhash;
	}

	public void setPasswordhash(String pPasswordhash) {
		mPasswordhash = pPasswordhash;
	}

	public int getVersion() {
		return mVersion;
	}

	public void setVersion(int pVersion) {
		mVersion = pVersion;
	}

	public Date getAdded() {
		return mAdded;
	}

	public void setAdded(Date pAdded) {
		mAdded = pAdded;
	}

	public Date getLastupdate() {
		return mLastupdate;
	}

	public void setLastupdate(Date pLastupdate) {
		mLastupdate = pLastupdate;
	}

	public Set<UserRoleEntity> getUserrolesForuser() {
		return mUserrolesForuser;
	}

	public void setUserrolesForuser(Set<UserRoleEntity> pUserrolesForuser) {
		mUserrolesForuser = pUserrolesForuser;
	}

	public Set<MenuEntity> getMenus() {
		return mMenus;
	}

	public void setMenus(Set<MenuEntity> pMenus) {
		mMenus = pMenus;
	}

	public Set<UserRoleEntity> getUserRolesForAddedBy() {
		return mUserRolesForAddedBy;
	}

	public void setUserRolesForAddedBy(Set<UserRoleEntity> pUserRolesForAddedBy) {
		mUserRolesForAddedBy = pUserRolesForAddedBy;
	}

	public Set<CompanyEntity> getCompanies() {
		return mCompanies;
	}

	public void setCompanies(Set<CompanyEntity> pCompanies) {
		mCompanies = pCompanies;
	}

	public Set<BranchEntity> getBranches() {
		return mBranches;
	}

	public void setBranches(Set<BranchEntity> pBranches) {
		mBranches = pBranches;
	}

	public Set<RoleMenuEntity> getRolemenus() {
		return mRolemenus;
	}

	public void setRolemenus(Set<RoleMenuEntity> pRolemenus) {
		mRolemenus = pRolemenus;
	}

	public Set<RoleEntity> getRoles() {
		return mRoles;
	}

	public void setRoles(Set<RoleEntity> pRoles) {
		mRoles = pRoles;
	}

	public Set<RoleActionsEntity> getRoleActionses() {
		return mRoleActionses;
	}

	public void setRoleActionses(Set<RoleActionsEntity> pRoleActionses) {
		mRoleActionses = pRoleActionses;
	}

	public Set<UserEntity> getUsers() {
		return mUsers;
	}

	public void setUsers(Set<UserEntity> pUsers) {
		mUsers = pUsers;
	}

}
